// <auto-generated />
using System;
using DataAccessAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessAPI.Migrations
{
    [DbContext(typeof(VoucherHubDbContext))]
    [Migration("20230516145125_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccessAPI.Data.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignGameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FK_Campaign_CampaignGame")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StoreOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FK_Campaign_CampaignGame");

                    b.HasIndex("StoreOwnerId");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("DataAccessAPI.Data.CampaignGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CampaignGame");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("FK_Customer_Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("FK_Customer_Account");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DataAccessAPI.Data.CustomerNontification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FK_CustomerNontification")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Sender")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SenderType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FK_CustomerNontification");

                    b.ToTable("CustomerNontification");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Customer_Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FK_Customer_Campaign_Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FK_Customer_Campaign_Customer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GrantedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FK_Customer_Campaign_Campaign");

                    b.HasIndex("FK_Customer_Campaign_Customer");

                    b.ToTable("Customer_Campaign");
                });

            modelBuilder.Entity("DataAccessAPI.Data.StoreOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FK_StoreOwner_Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FK_StoreOwner_Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FK_StoreOwner_Account");

                    b.HasIndex("FK_StoreOwner_Campaign");

                    b.ToTable("StoreOwner");
                });

            modelBuilder.Entity("DataAccessAPI.Data.StoreOwnerNontification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("FK_StoreOwnerNontification")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Sender")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SenderType")
                        .HasColumnType("int");

                    b.Property<Guid?>("StoreOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FK_StoreOwnerNontification");

                    b.ToTable("StoreOwnerNontification");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Code")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Customer_CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<Guid?>("FK_Voucher_Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FK_Voucher_Customer_Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FK_Voucher_Campaign");

                    b.HasIndex("FK_Voucher_Customer_Campaign");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Campaign", b =>
                {
                    b.HasOne("DataAccessAPI.Data.CampaignGame", "CampaignGame")
                        .WithMany("Campaigns")
                        .HasForeignKey("FK_Campaign_CampaignGame");

                    b.HasOne("DataAccessAPI.Data.StoreOwner", null)
                        .WithMany("Campaigns")
                        .HasForeignKey("StoreOwnerId");

                    b.Navigation("CampaignGame");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Customer", b =>
                {
                    b.HasOne("DataAccessAPI.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("FK_Customer_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DataAccessAPI.Data.CustomerNontification", b =>
                {
                    b.HasOne("DataAccessAPI.Data.Customer", "Customer")
                        .WithMany("CustomerNontifications")
                        .HasForeignKey("FK_CustomerNontification");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Customer_Campaign", b =>
                {
                    b.HasOne("DataAccessAPI.Data.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("FK_Customer_Campaign_Campaign");

                    b.HasOne("DataAccessAPI.Data.Customer", "Customer")
                        .WithMany("Customer_Campaigns")
                        .HasForeignKey("FK_Customer_Campaign_Customer");

                    b.Navigation("Campaign");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DataAccessAPI.Data.StoreOwner", b =>
                {
                    b.HasOne("DataAccessAPI.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("FK_StoreOwner_Account");

                    b.HasOne("DataAccessAPI.Data.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("FK_StoreOwner_Campaign");

                    b.Navigation("Account");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("DataAccessAPI.Data.StoreOwnerNontification", b =>
                {
                    b.HasOne("DataAccessAPI.Data.StoreOwner", "StoreOwner")
                        .WithMany("StoreOwnerNontifications")
                        .HasForeignKey("FK_StoreOwnerNontification");

                    b.Navigation("StoreOwner");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Voucher", b =>
                {
                    b.HasOne("DataAccessAPI.Data.Campaign", "Campaign")
                        .WithMany("Vouchers")
                        .HasForeignKey("FK_Voucher_Campaign");

                    b.HasOne("DataAccessAPI.Data.Customer_Campaign", "Customer_Campaign")
                        .WithMany("Vouchers")
                        .HasForeignKey("FK_Voucher_Customer_Campaign");

                    b.Navigation("Campaign");

                    b.Navigation("Customer_Campaign");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Campaign", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("DataAccessAPI.Data.CampaignGame", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Customer", b =>
                {
                    b.Navigation("Customer_Campaigns");

                    b.Navigation("CustomerNontifications");
                });

            modelBuilder.Entity("DataAccessAPI.Data.Customer_Campaign", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("DataAccessAPI.Data.StoreOwner", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("StoreOwnerNontifications");
                });
#pragma warning restore 612, 618
        }
    }
}
